import{_ as e,W as a,X as s,Y as o,Z as t,$ as i,a1 as c,G as p,a0 as r}from"./framework-ba4bf44d.js";const l={},d=c(`<h1 id="container-queries" tabindex="-1"><a class="header-anchor" href="#container-queries" aria-hidden="true">#</a> Container Queries</h1><p>Para utilizar o <code>@container</code> Ã© necessÃ¡rio definir um query para o componente, fazemos isso da seguinte forma:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.nosso-wrapper </span><span class="token punctuation">{</span>
  <span class="token property">container-name</span><span class="token punctuation">:</span> wrapper<span class="token punctuation">;</span>
	<span class="token property">container-type</span><span class="token punctuation">:</span> inline-size<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>O que fizemos a cima foi definir o tipo do container e o nome dele.</p><p>Note que o <code>@container</code> tem o mesmo funcionamento do <code>@media</code>, entretanto oque diferencia os dois Ã© o container vai ter o adicional de poder utilizar operadores lÃ³gicos para definir o tamanho do container.</p><p>Oque tambÃ©m diferencia o <code>@container</code> do <code>@media</code> Ã© que ele ajusta o tamanho dos elementos baseado na classe pai e nÃ£o pelo tamanho do viewport.</p><p>EX:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token atrule"><span class="token rule">@container</span> wrapper <span class="token punctuation">(</span>inline <span class="token operator">&gt;</span> 50px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">.nossa-classe </span><span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Compatibilidade: Chrome(ğŸš§Beta), Firefox(ğŸš§Beta), Chromium(ğŸš§Beta) &amp; Safari(âœ…Suportado)</p></blockquote><hr>`,10);function u(m,v){const n=p("RouterLink");return a(),s("div",null,[d,o("p",null,[t(n,{to:"/content/ExtendRule/"},{default:i(()=>[r("Ir para o prÃ³ximo conteÃºdo")]),_:1})])])}const f=e(l,[["render",u],["__file","index.html.vue"]]);export{f as default};
