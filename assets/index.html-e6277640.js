import{_ as e,W as a,X as o,a1 as r}from"./framework-ba4bf44d.js";const d={},i=r('<h1 id="subgrids" tabindex="-1"><a class="header-anchor" href="#subgrids" aria-hidden="true">#</a> SubGrids</h1><p>Com a popularidade dos grids (jÃ¡ que flex-box sÃ³ se move em uma direÃ§Ã£o) a utilizaÃ§Ã£o de grids Ã© o mias comum hoje para criar estilizaÃ§Ãµes mais complexas.</p><p>Mas atÃ© entÃ£o nÃ£o era possÃ­vel estilizar grids dentro de grids sem perder a linearidade do cÃ³digo, sendo necessÃ¡rio algumas vezes fazer uma gambiarra ou outra para funcionar e manter a responsividade funcionando corretamente. Com a chegada da propriedade <code>subgrid</code> para o css a utilizaÃ§Ã£o de grids dentro de grids Ã© agora Ã© possÃ­vel.</p><p>Basicamente a propriedade <code>subgrid</code> Ã© uma propriedade que permite que vocÃª crie grids dentro de grids mantendo a responsividade, alÃ©m de poder ser utilizada com o <code>gap</code>, tambÃ©m irÃ¡ compartilhar os valores entre as grids assim como o <code>grid-template-rows</code> ou <code>grid-template-columns</code>.</p><blockquote><p>Compatibilidade: Chrome(ğŸš§Beta), Firefox(âœ…Suportado), Chromium(ğŸš§Beta) &amp; Safari(âœ…Suportado)</p></blockquote>',5),s=[i];function t(c,m){return a(),o("div",null,s)}const p=e(d,[["render",t],["__file","index.html.vue"]]);export{p as default};
